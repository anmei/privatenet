<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<!-- 扫描包 -->
	<context:component-scan base-package="com.rhcheng.*" />
	
	<!-- 开始spring mvc的注解 -->
	<mvc:annotation-driven />
	
	<!-- 加载资源路径 -->
	<mvc:resources location="/resource/" mapping="/resource/**" />	
	
	<!-- 静态资源解析支持 -->
	<mvc:default-servlet-handler />
	
	<!-- spring rest 内容协商【统一资源多种展现，如JSON、XML、HTML】 -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1"></property>
		<!-- 设置为true以忽略对Accept Header的支持 ，默认就是true-->  
		<property name="ignoreAcceptHeader" value="true"></property>
		<!-- 用于开启 /blog/123?format=json 的支持 -->  
	    <property name="favorParameter" value="true" />  
		<!-- 是否启用扩展名支持，默认就是true -->
		<property name="favorPathExtension" value="true"></property>
		<!-- 扩展名至mimeType的映射,即 /blog.json => application/json -->  
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="html" value="text/html" /> <!-- 真正静态页面，使用htm后缀(文件格式)-->
			</map>
		</property>
		<!-- 在没有扩展名时即: "/blog/1" 时的默认展现形式 -->  
		<property name="defaultContentType" value="text/html" />
		
	    <property name="viewResolvers">  
	        <list>  
	            <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />  
	            <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
	                <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />  
	                <property name="prefix" value="/WEB-INF/page/" />  
	                <property name="suffix" value=".jsp"></property>  
	            </bean>  
	        </list>  
	    </property>  
	    <!-- 若上面没有找到解析的方法则用默认的解析方式，即下面的json解析 -->
	    <!-- 
	    	常用返回json数据方法：
	    	json工具:
	    	ModelAndview返回 ：通过MappingJacksonJsonView解析自动封装成json格式返回
	    	responsebody:直接返回实体
	    	jackson处理:
	    	常用返回类型：RedirectView\ModelAndVie\String类型路径\Pojo
	    -->
	    <property name="defaultViews">  
	        <list>  
	            <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
	        </list>  
	    </property>
	</bean>
	
	
	
	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 文件上传的总大小 5M，不是指单个文件 -->
		<property name="maxUploadSize" value="5242880"></property>
		<!-- 文件大小的判断延迟到action中进行 <property name="resolveLazily" value="true"></property> -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 前提这个文件夹要存在你的项目中 -->
		<!-- <property name="uploadTempDir" value="/temp"></property> -->
	</bean>
	
	<!-- 拦截器 -->
    <mvc:interceptors>
		<!-- 可以写多个interceptor -->
		<mvc:interceptor>
			<!-- 可以写多个<mvc:mapping> -->
			<mvc:mapping path="/user/**" />
			<mvc:mapping path="/customize/**" />
			<mvc:mapping path="/cart/**" />
			<mvc:mapping path="/album/**" />
			<mvc:mapping path="/dirFav/**" />
			<mvc:mapping path="/message/isLike.action"/>
			<mvc:mapping path="/mall/saveComment.action"/>
			<ref bean="userInterceptor" />
		</mvc:interceptor>
		<!-- 重复提交拦截器 -->
		<bean id="tokenInterceptor" class="com.rhcheng.interceptor.TokenInterceptor"  />
	</mvc:interceptors> 
	
	
	
</beans>