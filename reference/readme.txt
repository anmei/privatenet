#/usr/bin/which: no unzip in (/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin)
鑰冭檻session闆嗘垚瀛樺偍锛岀幇鍦ㄦ瘮杈冨ソ鐨勬柟妗堝氨鏄痭osql瀛樺偍锛屼慨鏀箃omcat銆乯etty鍜宩boss绛塻ession鐨勫瓨鍌ㄦ柟寮忔槸寰堝鏄撶殑
鏍圭粨鏋勪笅鐨勪换浣曠洰褰曢兘鍙互浣滀负鎸傝浇鐐癸紝鑰屾偍涔熷彲浠ュ皢鍚屼竴鏂囦欢绯荤粺鍚屾椂鎸傝浇浜庝笉鍚岀殑鎸傝浇鐐逛笂,浣嗘槸涓嶈兘鍦ㄥ悓涓�釜鎸傝浇鐐逛笂鎸傝浇澶氫釜涓嶅悓鐨勫垎鍖恒�銆嬨�
-------others----------

<<<<<<< HEAD
分片的部署，即实例2中分片算法被放在哪里？是在分片时需要首先考虑的问题，分片部署方式一般分为以下三种：

         （1）在客户端做分片；这种方式在客户端确定要连接的redis实例，然后直接访问相应的redis实例；

         （2）在代理中做分片；这种方式中，客户端并不直接访问redis实例，它也不知道自己要访问的具体是哪个redis实例，而是由代理转发请求和结果；其工作过程为：客户端先将请求发送给代理，代理通过分片算法确定要访问的是哪个redis实例，然后将请求发送给相应的redis实例，redis实例将结果返回给代理，代理最后将结果返回给客户端。

         （3）在redis服务器端做分片；这种方式被称为“查询路由”，在这种方式中客户端随机选择一个redis实例发送请求，如果所请求的内容不再当前redis实例中它会负责将请求转交给正确的redis实例，也有的实现中，redis实例不会转发请求，而是将正确redis的信息发给客户端，由客户端再去向正确的redis实例发送请求。
=======
fsd你好 测试 好的 我将回归
>>>>>>> def1e9fd924cdb72debb2cc7b35a0b1fd8679aff


------nginx----------------

	


------nginx----------------




-------english----------
dispose
boundary
delimiter
specific primitive
arbitrary
intimately




---------java鍩虹--------------


 


-------------------
鍗曚竴銆侀殧绂汇�寮�棴銆侀噷姘忔浛鎹€�渚濊禆鍊掔疆銆佽开绫崇壒 鍘熷垯


------concurrent-------------




--------JVM-----------------






---------------缃戠粶閫氫俊-------------
浣嗘櫘閫氱殑socket杩炴帴瀵规湇鍔″櫒鐨勬秷鑰楀お澶т簡锛屾墍浠ユ墠浼氬嚭鐜板儚MQTT杩欑杞婚噺绾т綆娑堣�鐨勫崗璁潵缁存姢闀胯繛鎺ワ紝閭ｄ箞瑕佸浣曠淮鎶ら暱杩炴帴鍛�浣跨敤蹇冭烦鏈哄埗鍙互缁存姢



------------IO(闃诲)----------------------


------------Netty----------------------






