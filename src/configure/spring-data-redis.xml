<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	 http://www.springframework.org/schema/cache
     http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
	 http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-3.2.xsd">
     
     <!-- <context:property-placeholder location="classpath:properties/spring-redis.properties"/> -->
       
	 <!-- 使用spring-data-redis -->     
     <!-- <bean id="redisconnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
        p:host-name="${redis.host}" 
        p:port="${redis.port}" 
        p:password="${redis.pass}"
        p:pool-config-ref="redisPoolConfig" /> -->
     
     <!-- 注意此处注入的是JedisPoolConfig，说明SDR还依赖与Jedis -->
     <!-- <bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
         <property name="maxIdle" value="${redis.maxIdle}" />
         <property name="maxActive" value="${redis.maxActive}" />
         <property name="maxWait" value="${redis.maxWait}" />
         <property name="testOnBorrow" value="${redis.testOnBorrow}" />
     </bean> -->

    <!-- <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="redisconnectionFactory" /> -->
		<!-- 如果不配置Serializer，那么存储的时候智能使用String，如果用User类型存储，那么会提示错误User can't cast to String！！！-->
        <!-- <property name="keySerializer">
        	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
    </bean> -->
    
    
    <!-- 使用SpringSide -->
    
    <!-- redis配置 -->
	<bean name="jedisTemplate" class="com.rhcheng.redis.JedisTemplate">
		<constructor-arg name="jedisPool" ref="jedisPool"></constructor-arg>
	</bean>

	<!-- redis server -->
	<bean name="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg name="poolConfig" ref="poolConfig"></constructor-arg>
		<constructor-arg name="host" value="121.41.29.20"></constructor-arg>
		<constructor-arg name="port" value="6379"></constructor-arg>
		<constructor-arg name="timeout" value="10000"></constructor-arg>
	</bean>

	<!-- jedis 连接池 -->
	<bean name="poolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
	 	<property name="maxTotal" value="10"></property>
		<property name="maxIdle" value="10"></property> 
		<property name="timeBetweenEvictionRunsMillis" value="360000"></property>
		<property name="MaxWaitMillis" value="60000"></property>
	</bean>
    

    
</beans>